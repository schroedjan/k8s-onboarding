apiVersion: v1
kind: Namespace
metadata:
  name: api-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: api-gateway
spec:
  selector:
    matchLabels:
      app: api-gateway
  replicas: 1
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      volumes:
        - name: krakend-config
          configMap:
            name: krakend-config
        - name: krakend-partials
          configMap:
            name: krakend-partials
        - name: tmp
          emptyDir: {}
      containers:
      - name: api-gateway
        image: krakend:2.9
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: krakend-config
          mountPath: /etc/krakend
        - name: krakend-partials
          mountPath: /etc/krakend/partials
        - name: tmp
          mountPath: /tmp
        command: [ "/usr/bin/krakend" ]
        args: [ "run", "-d", "-c", "/etc/krakend/krakend.json"]
        resources:
            requests:
              memory: '64Mi'
              cpu: '100m'
            limits:
              memory: '1024Mi'
              cpu: '1000m'
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
        env:
        # - name: "FC_SETTINGS"
        #   value: "/etc/krakend/config/settings/test"
        # - name: "FC_TEMPLATES"
        #   value: "/etc/krakend/config/templates"
        - name: "FC_PARTIALS"
          value: "/etc/krakend/config/partials"
        - name: FC_ENABLE
          value: "1"
        - name: KRAKEND_PORT
          value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: api-gateway
spec:
  type: NodePort
  ports:
  - name: http
    port: 8000
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
  selector:
    app: api-gateway
