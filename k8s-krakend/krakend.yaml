apiVersion: v1
kind: ConfigMap
metadata:
  name: krakend-config
  namespace: application
  labels:
    app: krakend
data:
  krakend.json: |
    {
      "$schema": "https://www.krakend.io/schema/v2.9/krakend.json",
      "version": 3,
      "endpoints": [
          {
              "endpoint": "/api/v1/",
              "method": "GET",
              "backend": [
                  {
                      "url_pattern": "/",
                      "host": [
                          "http://hello-world-service:3000"
                      ]
                  }
              ]
          },
          {
              "endpoint": "/api/v1/hello",
              "method": "GET",
              "backend": [
                  {
                      "url_pattern": "/hello",
                      "host": [
                          "http://hello-world-service:3000"
                      ]
                  }
              ]
          },
          {
              "endpoint": "/api/v1/hello/{name}",
              "method": "GET",
              "backend": [
                  {
                      "url_pattern": "/hello/{name}",
                      "host": [
                          "http://hello-world-service:3000"
                      ]
                  }
              ]
          }
      ],
      "extra_config": {
          "telemetry/logging": {
              "level": "WARNING",
              "syslog": true,
              "stdout": true
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: krakend
  namespace: application
spec:
  selector:
    matchLabels:
      app: krakend
  replicas: 1
  template:
    metadata:
      labels:
        app: krakend
    spec:
      volumes:
        - name: krakend-config
          configMap:
            name: krakend-config
      containers:
      - name: krakend
        image: krakend:2.9
        ports:
        - containerPort: 8080
        command: [ "/usr/bin/krakend" ]
        args: [ "run", "-d", "-c", "/etc/krakend/krakend.json", "-p", "8080" ]
        volumeMounts:
        - name: krakend-config
          mountPath: /etc/krakend
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
        env:
        - name: KRAKEND_PORT
          value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: krakend
  namespace: application
spec:
  type: NodePort
  ports:
  - name: http
    port: 8000
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
  selector:
    app: krakend
